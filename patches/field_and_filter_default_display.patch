diff --git a/src/Plugin/ViewsReferenceSetting/ViewsReferenceExposedFilters.php b/src/Plugin/ViewsReferenceSetting/ViewsReferenceExposedFilters.php
index 64b0b65..04c34d8 100644
--- a/src/Plugin/ViewsReferenceSetting/ViewsReferenceExposedFilters.php
+++ b/src/Plugin/ViewsReferenceSetting/ViewsReferenceExposedFilters.php
@@ -176,6 +176,7 @@ class ViewsReferenceExposedFilters extends PluginBase implements ViewsReferenceS
         // Get view filters.
         $set_filter = FALSE;
         $view_filters = $view->display_handler->getOption('filters');
+        $this->setExposedFilterToFalseByDefault($view_filters);
         foreach ($show_filters_values as $index => $show_filter) {
           // Get the filter name.
           $index = str_replace('show_on_page_', '', $index);
@@ -199,6 +200,16 @@ class ViewsReferenceExposedFilters extends PluginBase implements ViewsReferenceS
         }
       }
     }
+
+  }
+
+  /**
+   * Set exposed filter to false by default.
+   */
+  protected function setExposedFilterToFalseByDefault(&$view_filters) {
+    foreach ($view_filters as $filter_id => $view_filter) {
+      $view_filters[$filter_id]['exposed'] = FALSE;
+    }
   }
 
   /**
diff --git a/src/Plugin/ViewsReferenceSetting/ViewsReferenceFieldsOverride.php b/src/Plugin/ViewsReferenceSetting/ViewsReferenceFieldsOverride.php
index 5ca6ea4..0b00118 100644
--- a/src/Plugin/ViewsReferenceSetting/ViewsReferenceFieldsOverride.php
+++ b/src/Plugin/ViewsReferenceSetting/ViewsReferenceFieldsOverride.php
@@ -111,15 +111,24 @@ class ViewsReferenceFieldsOverride extends PluginBase implements ViewsReferenceS
   public function alterView(ViewExecutable $view, $values) {
     if (isset($values['fields_override'])) {
       $fields_override = $values['fields_override'];
-      foreach ($fields_override as $field => $value) {
-        if (!$value) {
+      foreach ($view->display_handler->options["fields"] as $field_name => $field_value) {
+        if (isset($fields_override[$field_name])) {
           // Remove the field if it not selected to display.
           // Field can be in multiple places.
-          if (isset($view->display_handler->options["fields"][$field])) {
-            $view->display_handler->options["fields"][$field]['exclude'] = TRUE;
+          if (empty($fields_override[$field_name])) {
+            $view->display_handler->options["fields"][$field_name]['exclude'] = TRUE;
+            if (isset($view->display_handler->default_display->options["fields"][$field_name])) {
+              $view->display_handler->default_display->options["fields"][$field_name]['exclude'] = TRUE;
+            }
           }
-          if (isset($view->display_handler->default_display->options["fields"][$field])) {
-            $view->display_handler->default_display->options["fields"][$field]['exclude'] = TRUE;
+        }
+        // If value is not set in fields override then hide the field
+        // from the display. New field added in the view should not be
+        // automatically get rendered.
+        else {
+          $view->display_handler->options["fields"][$field_name]['exclude'] = TRUE;
+          if (isset($view->display_handler->default_display->options["fields"][$field_name])) {
+            $view->display_handler->default_display->options["fields"][$field_name]['exclude'] = TRUE;
           }
         }
       }
